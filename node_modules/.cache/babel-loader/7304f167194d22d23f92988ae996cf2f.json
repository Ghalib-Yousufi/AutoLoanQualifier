{"ast":null,"code":"export const checkEligibility = application => {\n  return async dispatch => {\n    dispatch(setIsEvaluating());\n    let res = await checkLoanEligibility(application);\n    debugger;\n    res.data.isSuccessful ? dispatch(setEvaluationSuccess()) : dispatch(setEvaluationFailed(res.data.message));\n  };\n};\nexport const setIsEvaluating = (payload = null) => {\n  return {\n    type: 'IS_EVALUATING',\n    payload: payload\n  };\n};\nexport const setEvaluationSuccess = (payload = null) => {\n  return {\n    type: 'EVALUATION_SUCCESS',\n    payload: payload\n  };\n};\nexport const setEvaluationFailed = (payload = null) => {\n  return {\n    type: 'EVALUATION_FAILED',\n    payload: payload\n  };\n};\n\nconst checkLoanEligibility = loanApplication => new Promise((resolve, reject) => {\n  var delayInMilliseconds = 1000;\n  setTimeout(function () {\n    if (loanApplication.userEstimatedYearlyIncome >= 10000) {\n      resolve({\n        data: {\n          isSuccessful: true,\n          message: \"Success! Please proceed your account creation\"\n        }\n      });\n    } else {\n      resolve({\n        data: {\n          isSuccessful: false,\n          message: \"We're really sorry\"\n        }\n      });\n    }\n  }, delayInMilliseconds);\n});","map":{"version":3,"sources":["/Users/ghalib/Documents/AutoLoanQualifier/src/redux/actions.js"],"names":["checkEligibility","application","dispatch","setIsEvaluating","res","checkLoanEligibility","data","isSuccessful","setEvaluationSuccess","setEvaluationFailed","message","payload","type","loanApplication","Promise","resolve","reject","delayInMilliseconds","setTimeout","userEstimatedYearlyIncome"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAIC,WAAD,IAAiB;AAC7C,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACA,QAAIC,GAAG,GAAG,MAAMC,oBAAoB,CAACJ,WAAD,CAApC;AACA;AACAG,IAAAA,GAAG,CAACE,IAAJ,CAASC,YAAT,GACIL,QAAQ,CAACM,oBAAoB,EAArB,CADZ,GAEIN,QAAQ,CAACO,mBAAmB,CAACL,GAAG,CAACE,IAAJ,CAASI,OAAV,CAApB,CAFZ;AAGH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMP,eAAe,GAAG,CAACQ,OAAO,GAAG,IAAX,KAAoB;AAC/C,SAAO;AAAEC,IAAAA,IAAI,EAAE,eAAR;AAAyBD,IAAAA,OAAO,EAAEA;AAAlC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMH,oBAAoB,GAAG,CAACG,OAAO,GAAG,IAAX,KAAoB;AACpD,SAAO;AAAEC,IAAAA,IAAI,EAAE,oBAAR;AAA8BD,IAAAA,OAAO,EAAEA;AAAvC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMF,mBAAmB,GAAG,CAACE,OAAO,GAAG,IAAX,KAAoB;AACnD,SAAO;AAAEC,IAAAA,IAAI,EAAE,mBAAR;AAA6BD,IAAAA,OAAO,EAAEA;AAAtC,GAAP;AACH,CAFM;;AAKP,MAAMN,oBAAoB,GAAIQ,eAAD,IAAqB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/E,MAAIC,mBAAmB,GAAG,IAA1B;AAEAC,EAAAA,UAAU,CAAC,YAAY;AACnB,QAAIL,eAAe,CAACM,yBAAhB,IAA6C,KAAjD,EAAwD;AACpDJ,MAAAA,OAAO,CAAC;AACJT,QAAAA,IAAI,EAAE;AACFC,UAAAA,YAAY,EAAE,IADZ;AAEFG,UAAAA,OAAO,EAAE;AAFP;AADF,OAAD,CAAP;AAMH,KAPD,MASK;AACDK,MAAAA,OAAO,CAAC;AACJT,QAAAA,IAAI,EAAE;AACFC,UAAAA,YAAY,EAAE,KADZ;AAEFG,UAAAA,OAAO,EAAE;AAFP;AADF,OAAD,CAAP;AAMH;AACJ,GAlBS,EAkBPO,mBAlBO,CAAV;AAoBH,CAvBiD,CAAlD","sourcesContent":["export const checkEligibility = (application) => {\n    return async (dispatch) => {\n        dispatch(setIsEvaluating())\n        let res = await checkLoanEligibility(application);\n        debugger;\n        res.data.isSuccessful ?\n            dispatch(setEvaluationSuccess()) :\n            dispatch(setEvaluationFailed(res.data.message));\n    };\n}\n\nexport const setIsEvaluating = (payload = null) => {\n    return { type: 'IS_EVALUATING', payload: payload }\n}\n\nexport const setEvaluationSuccess = (payload = null) => {\n    return { type: 'EVALUATION_SUCCESS', payload: payload }\n}\n\nexport const setEvaluationFailed = (payload = null) => {\n    return { type: 'EVALUATION_FAILED', payload: payload }\n}\n\n\nconst checkLoanEligibility = (loanApplication) => new Promise((resolve, reject) => {\n    var delayInMilliseconds = 1000;\n\n    setTimeout(function () {\n        if (loanApplication.userEstimatedYearlyIncome >= 10000) {\n            resolve({\n                data: {\n                    isSuccessful: true,\n                    message: \"Success! Please proceed your account creation\"\n                }\n            });\n        }\n\n        else {\n            resolve({\n                data: {\n                    isSuccessful: false,\n                    message: \"We're really sorry\"\n                }\n            })\n        }\n    }, delayInMilliseconds);\n\n})"]},"metadata":{},"sourceType":"module"}